# Generated by Django 2.2.1 on 2019-08-14 19:03

import cms.models.fields
from django.db import migrations, models
import modelcluster.fields


class Migration(migrations.Migration):
    atomic = False

    dependencies = [
        ('cms', '0017_auto_20190801_0357'),
    ]

    operations = [

        migrations.CreateModel(
            name='PlatformSupported',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            bases=(cms.models.fields.AbstractField, models.Model),
        ),
        migrations.CreateModel(
            name='RevenueModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            bases=(cms.models.fields.AbstractField, models.Model),
        ),
        migrations.CreateModel(
            name='TradingInstrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            bases=(cms.models.fields.AbstractField, models.Model),
        ),
        migrations.RenameModel(
            old_name='AccountOptions',
            new_name='AccountOption',
        ),
        migrations.RenameModel(
            old_name='AccountTypes',
            new_name='AccountType',
        ),
        migrations.RenameModel(
            old_name='Country',
            new_name='Location',
        ),
        migrations.RenameModel(
            old_name='Language',
            new_name='SupportedLanguage',
        ),
        migrations.RenameModel(
            old_name='TrainingTools',
            new_name='TrainingTool',
        ),
        migrations.DeleteModel(
            name='PlatformsSupported',
        ),
        migrations.RenameField(
            model_name='regulation',
            old_name='country',
            new_name='location',
        ),
        migrations.RemoveField(
            model_name='service',
            name='countries',
        ),
        migrations.AddField(
            model_name='service',
            name='account_currency',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.AccountCurrency'),
        ),
        migrations.AddField(
            model_name='service',
            name='account_options',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.AccountOption'),
        ),
        migrations.AddField(
            model_name='service',
            name='account_types',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.AccountType'),
        ),
        migrations.AddField(
            model_name='service',
            name='bonus_policy',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='service',
            name='broker_name',
            field=models.CharField(default='n', max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='service',
            name='commission',
            field=models.CharField(default=None, max_length=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='service',
            name='islamic_accounts',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='service',
            name='leverage',
            field=models.CharField(default=None, max_length=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='service',
            name='location',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, related_name='location', to='cms.Location'),
        ),
        migrations.AddField(
            model_name='service',
            name='minimum_deposit',
            field=models.CharField(default=None, max_length=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='service',
            name='payment_method',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='service',
            name='spread',
            field=models.CharField(default=None, max_length=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='service',
            name='swap_free',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='service',
            name='international_offices',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, related_name='international_offices', to='cms.Country'),
        ),
        migrations.RemoveField(
            model_name='service',
            name='license',
        ),
        migrations.AlterField(
            model_name='service',
            name='platforms_supported',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.PlatformSupported'),
        ),
        migrations.AlterField(
            model_name='tradingsoftware',
            name='name',
            field=models.CharField(max_length=30),
        ),
        migrations.AddField(
            model_name='service',
            name='revenue_model',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.RevenueModel'),
        ),
        migrations.AddField(
            model_name='service',
            name='trading_instruments',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='cms.TradingInstrument'),
        ),
        migrations.AddField(
            model_name='service',
            name='license',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, related_name='license', to='cms.License'),
        ),
    ]
